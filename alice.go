package main

import (
	"YandexAlice/models"
	"encoding/json"
	"log"
	"net/http"
	"strconv"
	"strings"
	"time"
)

var userStates = make(map[string]*models.UserState)

func main() {
	http.HandleFunc("/post", handleAlice)
	log.Println("Server started at :8080")
	http.ListenAndServe(":8080", nil)
}

func handleAlice(w http.ResponseWriter, r *http.Request) {
	var req models.AliceRequest
	if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
		http.Error(w, "Bad request", http.StatusBadRequest)
		return
	}

	log.Printf("Request from user %s: %s\n", req.Session.UserID, req.Request.OriginalUtterance)

	userID := req.Session.UserID
	if _, ok := userStates[userID]; !ok {
		userStates[userID] = &models.UserState{}
	}
	user := userStates[userID]

	res := models.AliceResponse{
		Version: req.Version,
	}
	res.Session.SessionID = req.Session.SessionID
	res.Session.MessageID = req.Session.MessageID
	res.Session.UserID = req.Session.UserID

	handleDialog(&req, &res, user)

	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(res)
}

func handleDialog(req *models.AliceRequest, res *models.AliceResponse, user *models.UserState) {
	input := strings.ToLower(req.Request.OriginalUtterance)

	// –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ Police Agreement
	if contains(input, []string{"–ø–æ–∫–∞–∂–∏ pa", "–ø–æ–ª–Ω—ã–π pa", "—Å–∫–∞–∂–∏ pa", "–ø–æ–ª–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "police agreement", "–¥–æ–≥–æ–≤–æ—Ä", "—É—Å–ª–æ–≤–∏—è"}) {
		res.Response.Text = `üö® Police Agreement

1. –ù–µ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–µ—Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è —É–≤–∞–∂–∞—Ç—å –ø—Ä–∞–≤–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.
–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è:

- –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–¥–∞/–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –∞–≤—Ç–æ—Ä–∞.
- –ü–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º, –≤–∫–ª—é—á–∞—è, –Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å: –¥—Ä—É–∑—å—è–º, –∫–æ–ª–ª–µ–≥–∞–º, —á–∞—Ç–∞–º –≤ Telegram –∏ –±–∞–±—É—à–∫–µ.

–ù–∞—Ä—É—à–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–æ–∂–µ—Ç —Ä–∞—Å—Ü–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–∫—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ö–∞–º—Å—Ç–≤–∞ –∏ –±—É–¥–µ—Ç –≤—Å—Ç—Ä–µ—á–µ–Ω–æ —Å—Ç—Ä–æ–≥–æ.

2. –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–∏–Ω–∏–º–∞—è –Ω–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ:

- –û–∑–Ω–∞–∫–æ–º–ª–µ–Ω —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –ø—Ä–æ–¥—É–∫—Ç–∞.
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∞–≤–∏–ª, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–º.
- –ù–µ –¥–µ–ª–∞–µ—Ç –≥–ª—É–ø–æ—Å—Ç–µ–π, –≤–∫–ª—é—á–∞—è –≤–∑–ª–æ–º, –¥–∏–∑–∞—Å—Å–µ–º–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.

3. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π
–í —Å–ª—É—á–∞–µ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:

- –ü–æ–¥–ª–µ–∂–∏—Ç —Å–∞–Ω–∫—Ü–∏—è–º –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–≥–æ (1) –º–µ–≥–∞ —Å—ã—Ä–∫–∞ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –∞–≤—Ç–æ—Ä—É –≤ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∏–ª–∏ –º–µ–º–Ω–æ–π —Ñ–æ—Ä–º–µ.
- –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–∂–µ –≤–Ω–µ—Å—ë–Ω –≤ —É—Å–ª–æ–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫ "–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π".

4. –ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è
–ü—Ä–∏–Ω—è—Ç–∏–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞.
–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ ‚Äî –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É –∏ –Ω–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ –Ω–∞—à –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∑–µ–Ω.`
		return
	}

	// –≠—Ç–∞–ø 1: –°–æ–≥–ª–∞—Å–∏–µ —Å Police Agreement
	if !user.AgreedToPA {
		if contains(input, []string{"–¥–∞", "—Å–æ–≥–ª–∞—Å–µ–Ω", "–æ–∫–µ–π", "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é"}) {
			user.AgreedToPA = true
			res.Response.Text = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ —Å Police Agreement. –ü–µ—Ä–µ–π–¥—ë–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É!"
			return
		}

		res.Response.Text = "–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –≤—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å Police Agreement. –í –Ω—ë–º:\n\n- –ù–µ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∞\n- –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–∞–≤—ã–∫–∞\n- –í —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: 1 –º–µ–≥–∞ —Å—ã—Ä–æ–∫ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞.\n\n–°–æ–≥–ª–∞—Å–Ω—ã?"
		res.Response.Buttons = []models.Button{
			{Title: "–î–∞", Hide: true},
			{Title: "–°–æ–≥–ª–∞—Å–µ–Ω", Hide: true},
		}
		return
	}

	// –û—Ç–∫–∞–∑ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
	if user.AgreedToMakeSkill && contains(input, []string{"–Ω–µ —Ö–æ—á—É", "–Ω–µ –±—É–¥—É", "–æ—Ç–∫–∞–∑", "–ø–µ—Ä–µ–¥—É–º–∞–ª"}) {
		res.Response.Text = "–°–æ–≥–ª–∞—Å–Ω–æ Police Agreement, –≤—ã –æ–±—è–∑–∞–Ω—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–∞—Å –∂–¥—ë—Ç 1 –º–µ–≥–∞ —Å—ã—Ä–æ–∫ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞."
		res.Response.Buttons = []models.Button{
			{Title: "–õ–∞–¥–Ω–æ, —Å–¥–µ–ª–∞—é", Hide: true},
			{Title: "–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è", Hide: true},
		}
		return
	}

	// –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
	if strings.Contains(input, "—Å–¥–µ–ª–∞—é –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É") {
		user.AgreedToMakeSkill = true
		days, hours, minutes, seconds := timeLeftUntilDeadline()
		res.Response.Text = "–•–æ—Ä–æ—à–æ, –∂–¥—É. –£ –≤–∞—Å –µ—Å—Ç—å: " + formatTime(days, hours, minutes, seconds)
		return
	}

	// –ó–∞–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏
	if contains(input, []string{"—Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏", "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å", "—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ", "—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏"}) {
		days, hours, minutes, seconds := timeLeftUntilDeadline()
		res.Response.Text = "–ü—Ä–æ—à–ª–æ: 0 —Å–µ–∫—É–Ω–¥. –û—Å—Ç–∞–ª–æ—Å—å: " + formatTime(days, hours, minutes, seconds)
		return
	}

	// –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ
	if contains(input, []string{"–ª–∞–¥–Ω–æ", "—Å–¥–µ–ª–∞—é", "—Ö–æ—Ä–æ—à–æ"}) {
		res.Response.Text = "–ñ–¥—É –≤–∞—à –Ω–∞–≤—ã–∫!"
		res.Response.EndSession = true
		return
	}

	// –û–±—â–∏–π —Å–ª—É—á–∞–π ‚Äî –∞–≥–∏—Ç–∞—Ü–∏—è
	res.Response.Text = "–í—Å–µ –≥–æ–≤–æ—Ä—è—Ç \"" + req.Request.OriginalUtterance + "\", –∞ —Ç—ã —Å–¥–µ–ª–∞–π –Ω–∞–≤—ã–∫ –¥–ª—è –ê–ª–∏—Å—ã!"
	res.Response.Buttons = []models.Button{
		{Title: "–°–¥–µ–ª–∞—é –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É", Hide: true},
		{Title: "–õ–∞–¥–Ω–æ", Hide: true},
	}
}

func timeLeftUntilDeadline() (int, int, int, int) {
	now := time.Now()
	var target time.Time

	switch now.Weekday() {
	case time.Monday:
		// –¥–æ —á–µ—Ç–≤–µ—Ä–≥–∞
		target = now.AddDate(0, 0, int(time.Thursday-now.Weekday()))
	case time.Thursday:
		// –¥–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
		target = now.AddDate(0, 0, int(time.Monday+7-now.Weekday()))
	default:
		// –ø—Ä–æ—Å—Ç–æ +3 –¥–Ω—è
		target = now.AddDate(0, 0, 3)
	}

	diff := target.Sub(now)
	days := int(diff.Hours()) / 24
	hours := int(diff.Hours()) % 24
	minutes := int(diff.Minutes()) % 60
	seconds := int(diff.Seconds()) % 60
	return days, hours, minutes, seconds
}

func formatTime(days, hours, minutes, seconds int) string {
	return strconv.Itoa(days) + " –¥–Ω., " +
		strconv.Itoa(hours) + " —á., " +
		strconv.Itoa(minutes) + " –º–∏–Ω., " +
		strconv.Itoa(seconds) + " —Å–µ–∫."
}

func contains(input string, options []string) bool {
	for _, opt := range options {
		if strings.Contains(input, opt) {
			return true
		}
	}
	return false
}
