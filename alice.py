from flask import Flask, request, jsonify
import time

app = Flask(__name__)

user_states = {}

@app.route('/post', methods=['POST'])
def handle_alice():
    req = request.get_json()

    user_id = req['session']['user_id']
    if user_id not in user_states:
        user_states[user_id] = {}

    user = user_states[user_id]

    res = {
        "version": req['version'],
        "session": req['session'],
        "response": {
            "text": "",
            "buttons": []
        }
    }

    handle_dialog(req, res, user)
    return jsonify(res)


def handle_dialog(req, res, user):
    input_text = req['request']['original_utterance'].lower()

    if not input_text.strip():
        res['response']['text'] = "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, —Å–∫–∞–∂–∏—Ç–µ '–¥–∞', '—Å–æ–≥–ª–∞—Å–µ–Ω' –∏–ª–∏ '–ø–æ–∫–∞–∂–∏ PA'."
        return

    if any(keyword in input_text for keyword in ["–ø–æ–∫–∞–∂–∏ pa", "–ø–æ–ª–Ω—ã–π pa", "—Å–∫–∞–∂–∏ pa", "–ø–æ–ª–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "police agreement", "–¥–æ–≥–æ–≤–æ—Ä", "—É—Å–ª–æ–≤–∏—è"]):
        res['response']['text'] = """
        üö® Police Agreement
        1. –ù–µ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–µ—Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è —É–≤–∞–∂–∞—Ç—å –ø—Ä–∞–≤–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.
        –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è:
        - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–¥–∞/–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –∞–≤—Ç–æ—Ä–∞.
        - –ü–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º, –≤–∫–ª—é—á–∞—è, –Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å: –¥—Ä—É–∑—å—è–º, –∫–æ–ª–ª–µ–≥–∞–º, —á–∞—Ç–∞–º –≤ Telegram –∏ –±–∞–±—É—à–∫–µ.

        –ù–∞—Ä—É—à–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–æ–∂–µ—Ç —Ä–∞—Å—Ü–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–∫—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ö–∞–º—Å—Ç–≤–∞ –∏ –±—É–¥–µ—Ç –≤—Å—Ç—Ä–µ—á–µ–Ω–æ —Å—Ç—Ä–æ–≥–æ.
        2. –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–∏–Ω–∏–º–∞—è –Ω–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ:
        - –û–∑–Ω–∞–∫–æ–º–ª–µ–Ω —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –ø—Ä–æ–¥—É–∫—Ç–∞.
        - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∞–≤–∏–ª, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–º.
        - –ù–µ –¥–µ–ª–∞–µ—Ç –≥–ª—É–ø–æ—Å—Ç–µ–π, –≤–∫–ª—é—á–∞—è –≤–∑–ª–æ–º, –¥–∏–∑–∞—Å—Å–µ–º–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
        3. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π
        –í —Å–ª—É—á–∞–µ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
        - –ü–æ–¥–ª–µ–∂–∏—Ç —Å–∞–Ω–∫—Ü–∏—è–º –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–≥–æ (1) –º–µ–≥–∞ —Å—ã—Ä–∫–∞ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –∞–≤—Ç–æ—Ä—É –≤ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∏–ª–∏ –º–µ–º–Ω–æ–π —Ñ–æ—Ä–º–µ.
        - –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–∂–µ –≤–Ω–µ—Å—ë–Ω –≤ —É—Å–ª–æ–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫ "–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π".
        4. –ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è
        –ü—Ä–∏–Ω—è—Ç–∏–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞.
        –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ ‚Äî –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É –∏ –Ω–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ –Ω–∞—à –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∑–µ–Ω.
        """
        return

    # –≠—Ç–∞–ø 1: –°–æ–≥–ª–∞—Å–∏–µ —Å Police Agreement
    if 'agreed_to_pa' not in user:
        if any(agreement in input_text for agreement in ["–¥–∞", "—Å–æ–≥–ª–∞—Å–µ–Ω", "–æ–∫–µ–π", "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é"]):
            user['agreed_to_pa'] = True
            res['response']['text'] = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ —Å Police Agreement. –ü–µ—Ä–µ–π–¥—ë–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É!"
            return

        res['response']['text'] = """–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –≤—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å Police Agreement. –í –Ω—ë–º:
        - –ù–µ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∞
        - –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–∞–≤—ã–∫–∞
        - –í —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: 1 –º–µ–≥–∞ —Å—ã—Ä–æ–∫ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞.
        –°–æ–≥–ª–∞—Å–Ω—ã?"""
        res['response']['buttons'] = [{"title": "–î–∞", "hide": True}, {"title": "–°–æ–≥–ª–∞—Å–µ–Ω", "hide": True}]
        return

    # –û—Ç–∫–∞–∑ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
    if 'agreed_to_make_skill' in user and user['agreed_to_make_skill']:
        if any(reject in input_text for reject in ["–Ω–µ —Ö–æ—á—É", "–Ω–µ –±—É–¥—É", "–æ—Ç–∫–∞–∑", "–ø–µ—Ä–µ–¥—É–º–∞–ª"]):
            res['response']['text'] = "–°–æ–≥–ª–∞—Å–Ω–æ Police Agreement, –≤—ã –æ–±—è–∑–∞–Ω—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–∞—Å –∂–¥—ë—Ç 1 –º–µ–≥–∞ —Å—ã—Ä–æ–∫ –æ—Ç –†–æ—Å–ê–≥—Ä–æ–ö–æ–º–ø–ª–µ–∫—Å–∞."
            res['response']['buttons'] = [{"title": "–õ–∞–¥–Ω–æ, —Å–¥–µ–ª–∞—é", "hide": True}, {"title": "–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è", "hide": True}]
            return

    # –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
    if "—Å–¥–µ–ª–∞—é –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É" in input_text:
        user['agreed_to_make_skill'] = True
        days, hours, minutes, seconds = time_left_until_deadline()
        res['response']['text'] = f"–•–æ—Ä–æ—à–æ, –∂–¥—É. –£ –≤–∞—Å –µ—Å—Ç—å: {format_time(days, hours, minutes, seconds)}"
        return

    # –ó–∞–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏
    if any(time_query in input_text for time_query in ["—Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏", "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å", "—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ", "—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏"]):
        days, hours, minutes, seconds = time_left_until_deadline()
        res['response']['text'] = f"–ü—Ä–æ—à–ª–æ: 0 —Å–µ–∫—É–Ω–¥. –û—Å—Ç–∞–ª–æ—Å—å: {format_time(days, hours, minutes, seconds)}"
        return

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ
    if any(accept in input_text for accept in ["–ª–∞–¥–Ω–æ", "—Å–¥–µ–ª–∞—é", "—Ö–æ—Ä–æ—à–æ"]):
        res['response']['text'] = "–ñ–¥—É –≤–∞—à –Ω–∞–≤—ã–∫!"
        res['response']['end_session'] = True
        return

    # –û–±—â–∏–π —Å–ª—É—á–∞–π ‚Äî –∞–≥–∏—Ç–∞—Ü–∏—è
    res['response']['text'] = f"–í—Å–µ –≥–æ–≤–æ—Ä—è—Ç \"{req['request']['original_utterance']}\", –∞ —Ç—ã —Å–¥–µ–ª–∞–π –Ω–∞–≤—ã–∫ –¥–ª—è –ê–ª–∏—Å—ã!"
    res['response']['buttons'] = [{"title": "–°–¥–µ–ª–∞—é –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É", "hide": True}, {"title": "–õ–∞–¥–Ω–æ", "hide": True}]


def time_left_until_deadline():
    now = time.localtime()
    target = time.localtime(time.mktime(now) + (3 * 24 * 60 * 60))  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–ª—å —á–µ—Ä–µ–∑ 3 –¥–Ω—è
    diff = time.mktime(target) - time.mktime(now)
    days = diff // (24 * 60 * 60)
    hours = (diff % (24 * 60 * 60)) // 3600
    minutes = (diff % 3600) // 60
    seconds = diff % 60
    return int(days), int(hours), int(minutes), int(seconds)


def format_time(days, hours, minutes, seconds):
    return f"{days} –¥–Ω., {hours} —á., {minutes} –º–∏–Ω., {seconds} —Å–µ–∫."


if __name__ == '__main__':
    app.run(debug=True)
